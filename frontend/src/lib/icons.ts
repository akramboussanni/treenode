import React from 'react';
import {
  Twitter,
  Github,
  Linkedin,
  Instagram,
  Youtube,
  Facebook,
  Globe,
  Mail,
  Phone,
  MapPin,
  Calendar,
  Heart,
  Star,
  Home,
  User,
  Settings,
  Link,
  ExternalLink,
  Download,
  Upload,
  Share2,
  Copy,
  Edit,
  Trash2,
  Plus,
  Minus,
  Check,
  X,
  AlertCircle,
  Info,
  HelpCircle,
  Search,
  Filter,
  Grid,
  List,
  Eye,
  EyeOff,
  Lock,
  Unlock,
  Key,
  Shield,
  Camera,
  Image,
  Video,
  Music,
  File,
  Folder,
  Database,
  Server,
  Cloud,
  Wifi,
  Bluetooth,
  Smartphone,
  Tablet,
  Monitor,
  Laptop,
  Printer,
  Keyboard,
  Mouse,
  Headphones,
  Speaker,
  Gamepad2,
  Puzzle,
  Trophy,
  Medal,
  Award,
  Gift,
  Package,
  ShoppingCart,
  CreditCard,
  DollarSign,
  Euro,
  Bitcoin,
  TrendingUp,
  TrendingDown,
  BarChart3,
  PieChart,
  Activity,
  Zap,
  Target,
  Flag,
  Bookmark,
  Tag,
  Hash,
  AtSign,
  Percent,
  Infinity,
  Pi,
  Sigma,
  Omega,
} from 'lucide-react';

// Import Simple Icons
import * as SimpleIcons from 'simple-icons';

import { ICON_LIST } from './icon-list';

// Type for Simple Icon data
interface SimpleIconData {
  title: string;
  slug: string;
  path: string;
  source: string;
  hex: string;
}

// Create a dynamic Simple Icon component factory
const createSimpleIconComponent = (iconName: string) => {
  const iconKey = `si${iconName.charAt(0).toUpperCase() + iconName.slice(1)}` as keyof typeof SimpleIcons;
  const IconData = SimpleIcons[iconKey] as SimpleIconData | undefined;
  
  if (!IconData || !IconData.path) {
    console.warn(`Simple Icon not found: ${iconName}`);
    return null;
  }

  const SimpleIconComponent = ({ className }: { className?: string }) => {
    return React.createElement('svg', {
      className,
      viewBox: '0 0 24 24',
      fill: 'currentColor',
      dangerouslySetInnerHTML: { __html: IconData.path }
    });
  };

  SimpleIconComponent.displayName = `SimpleIcon_${iconName}`;
  return SimpleIconComponent;
};

// Lucide icons mapping - automatically generated
const lucideIcons = {
  twitter: Twitter,
  github: Github,
  linkedin: Linkedin,
  instagram: Instagram,
  youtube: Youtube,
  facebook: Facebook,
  globe: Globe,
  mail: Mail,
  phone: Phone,
  mapPin: MapPin,
  calendar: Calendar,
  heart: Heart,
  star: Star,
  home: Home,
  user: User,
  settings: Settings,
  link: Link,
  externalLink: ExternalLink,
  download: Download,
  upload: Upload,
  share: Share2,
  copy: Copy,
  edit: Edit,
  trash: Trash2,
  plus: Plus,
  minus: Minus,
  check: Check,
  x: X,
  alertCircle: AlertCircle,
  info: Info,
  helpCircle: HelpCircle,
  search: Search,
  filter: Filter,
  grid: Grid,
  list: List,
  eye: Eye,
  eyeOff: EyeOff,
  lock: Lock,
  unlock: Unlock,
  key: Key,
  shield: Shield,
  camera: Camera,
  image: Image,
  video: Video,
  music: Music,
  file: File,
  folder: Folder,
  database: Database,
  server: Server,
  cloud: Cloud,
  wifi: Wifi,
  bluetooth: Bluetooth,
  smartphone: Smartphone,
  tablet: Tablet,
  monitor: Monitor,
  laptop: Laptop,
  printer: Printer,
  keyboard: Keyboard,
  mouse: Mouse,
  headphones: Headphones,
  speaker: Speaker,
  gamepad: Gamepad2,
  puzzle: Puzzle,
  trophy: Trophy,
  medal: Medal,
  award: Award,
  gift: Gift,
  package: Package,
  shoppingCart: ShoppingCart,
  creditCard: CreditCard,
  dollarSign: DollarSign,
  euro: Euro,
  bitcoin: Bitcoin,
  trendingUp: TrendingUp,
  trendingDown: TrendingDown,
  barChart: BarChart3,
  pieChart: PieChart,
  activity: Activity,
  zap: Zap,
  target: Target,
  flag: Flag,
  bookmark: Bookmark,
  tag: Tag,
  hash: Hash,
  atSign: AtSign,
  percent: Percent,
  infinity: Infinity,
  pi: Pi,
  sigma: Sigma,
  omega: Omega,
};

// Simple Icons mapping - these are the ones that need special handling
const simpleIconMappings = {
  tiktok: 'tiktok',
  discord: 'discord',
  twitch: 'twitch',
  reddit: 'reddit',
  snapchat: 'snapchat',
  whatsapp: 'whatsapp',
  telegram: 'telegram',
  spotify: 'spotify',
  pinterest: 'pinterest',
  tumblr: 'tumblr',
  vimeo: 'vimeo',
  dailymotion: 'dailymotion',
  vk: 'vk',
  wechat: 'wechat',
  line: 'line',
  kakao: 'kakao',
  naver: 'naver',
  stackoverflow: 'stackoverflow',
  medium: 'medium',
  hashnode: 'hashnode',
  substack: 'substack',
  notion: 'notion',
  figma: 'figma',
  slack: 'slack',
  zoom: 'zoom',
  dropbox: 'dropbox',
  googledrive: 'googledrive',
  box: 'box',
  evernote: 'evernote',
  trello: 'trello',
  asana: 'asana',
  jira: 'jira',
  confluence: 'confluence',
  bitbucket: 'bitbucket',
  gitlab: 'gitlab',
  docker: 'docker',
  kubernetes: 'kubernetes',
  heroku: 'heroku',
  vercel: 'vercel',
  netlify: 'netlify',
  cloudflare: 'cloudflare',
  digitalocean: 'digitalocean',
  vultr: 'vultr',
  stripe: 'stripe',
  paypal: 'paypal',
  square: 'square',
  shopify: 'shopify',
  woo: 'woo',
  prestashop: 'prestashop',
  wordpress: 'wordpress',
  drupal: 'drupal',
  joomla: 'joomla',
  wix: 'wix',
  squarespace: 'squarespace',
  webflow: 'webflow',
  zapier: 'zapier',
  ifttt: 'ifttt',
  make: 'make',
  n8n: 'n8n',
  nodered: 'nodered',
  homeassistant: 'homeassistant',
  openhab: 'openhab',
  homebridge: 'homebridge',
  tasmota: 'tasmota',
  esphome: 'esphome',
  arduino: 'arduino',
  raspberrypi: 'raspberrypi',
  arm: 'arm',
  intel: 'intel',
  amd: 'amd',
  nvidia: 'nvidia',
  qualcomm: 'qualcomm',
  mediatek: 'mediatek',
  broadcom: 'broadcom',
  stmicroelectronics: 'stmicroelectronics',
  nxp: 'nxp',
  samsung: 'samsung',
  lg: 'lg',
  sony: 'sony',
  sharp: 'sharp',
  toshiba: 'toshiba',
  hitachi: 'hitachi',
  mitsubishi: 'mitsubishi',
  fujitsu: 'fujitsu',
  nec: 'nec',
  epson: 'epson',
  hp: 'hp',
  dell: 'dell',
  lenovo: 'lenovo',
  asus: 'asus',
  acer: 'acer',
  msi: 'msi',
  corsair: 'corsair',
  coolermaster: 'coolermaster',
  nzxt: 'nzxt',
};

// Build the icon map dynamically
export const iconMap: Record<string, React.ComponentType<{ className?: string }>> = {
  // Add Lucide icons
  ...lucideIcons,
  
  // Add Simple Icons dynamically
  ...Object.fromEntries(
    Object.entries(simpleIconMappings).map(([key, iconName]) => [
      key,
      createSimpleIconComponent(iconName)
    ]).filter(([, component]) => component !== null)
  ),
};

export function getIcon(iconId: string) {
  return iconMap[iconId] || Globe; // Default to Globe if icon not found
}

export function getIconList() {
  return ICON_LIST;
} 